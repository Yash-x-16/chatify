
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  userID            Int             @unique @default(autoincrement()) @id
  username          String           @unique 
  email             String            @unique 
  profilePicture    String? 
  password          String
  sentMessages      Message[]         @relation("sender")  
  recievedMessages  Message[]       @relation("receiver") 
  sentRequests      Request[]         @relation("sentRequests") 
  recievedRequests   Request[]        @relation("receivedRequests") 
  contactsA          Contact[]        @relation("userAContacts")
  contactsB          Contact[]        @relation("userBContacts")
}


model Request{
  requestId     Int  @unique @default(autoincrement()) 
  senderId      Int 
  receiverId    Int 
  status        Status @default(PENDING) 
  sender        User  @relation(fields: [senderId],references: [userID],name: "sentRequests")
  receiver      User   @relation(fields: [receiverId],references: [userID],name: "receivedRequests") 
  @@unique([senderId,receiverId])
}


model Contact {
  contactId   Int @unique @default(autoincrement()) 
  userAId     Int 
  userBId     Int 
  createdAt    DateTime @default(now()) 
  userA         User  @relation(fields: [userAId],references: [userID],name: "userAContacts")
  userB         User  @relation(fields: [userBId],references: [userID],name: "userBContacts") 
  @@unique([userAId,userBId])
  @@index([userAId])
  @@index([userBId])
}


model Message{
  messageId  Int            @unique @default(autoincrement()) @id
  senderId   Int 
  receiverId Int 
  text       String 
  createdAt   DateTime  @default(now())
  image      String?
  sender     User           @relation(fields: [senderId],references: [userID],name: "sender") 
  reciever   User           @relation(fields: [receiverId],references: [userID],name: "receiver") 
}


enum Status{
  NULL
  PENDING 
  ACCEPTED
  REJECTED
}